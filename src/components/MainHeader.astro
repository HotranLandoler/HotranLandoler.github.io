---
import Hamburger from './Hamburger.astro';
import LanguageSwitch from './LanguageSwitch.astro';
import Logo from './Logo.astro';
import {
  getCurrentLocale,
  getLocaleStaticPaths,
  getTranslations,
  getLocaleUrl,
} from '~/i18n';

type Props = Record<string, never>;

const locale = getCurrentLocale(Astro.params);

export const getStaticPaths = getLocaleStaticPaths;
const t = getTranslations(locale);
---

<header class="main-header">
  <Logo />
  <div class="flex items-center right">
    <nav class="main-nav">
      <ul class="flex items-center gap-s">
        <li>
          <a href={getLocaleUrl(locale, '/')} class="link">{t.site.home}</a>
        </li>
        <li>
          <a href={getLocaleUrl(locale, '/games/')} class="link submenu-item"
            >{t.site.games}</a
          >
        </li>
        <li>
          <a href={getLocaleUrl(locale, '/tools/')} class="link">
            {t.site.tools}
          </a>
        </li>
        <li>
          <a href={getLocaleUrl(locale, '/blog/')} class="link">
            {t.site.blog}
          </a>
        </li>
        <li>
          <a href={getLocaleUrl(locale, '/about/')} class="link"
            >{t.site.about}</a
          >
        </li>
      </ul>
    </nav>
    <div class="flex items-center toggles">
      <LanguageSwitch />
      <Hamburger />
    </div>
  </div>

  <nav class="mobile-nav">
    <ul class="mobile-nav-list">
      <li>
        <a
          href={getLocaleUrl(locale, '/')}
          class="hover-link--underline mobile-nav-link">
          {t.site.home}
        </a>
      </li>
      <li class="divider"></li>
      <li>
        <a
          href={getLocaleUrl(locale, '/games/')}
          class="hover-link--underline mobile-nav-link">
          {t.site.games}
        </a>
      </li>
      <li>
        <a
          href={getLocaleUrl(locale, '/art/')}
          class="hover-link--underline mobile-nav-link">
          {t.site.art}
        </a>
      </li>
      <li>
        <a
          href={getLocaleUrl(locale, '/photos/')}
          class="hover-link--underline mobile-nav-link">
          {t.site.photos}
        </a>
      </li>
      <li class="divider"></li>
      <li>
        <a
          href={getLocaleUrl(locale, '/tools/')}
          class="hover-link--underline mobile-nav-link">
          {t.site.tools}
        </a>
      </li>
      <li>
        <a
          href={getLocaleUrl(locale, '/blog/')}
          class="hover-link--underline mobile-nav-link">
          {t.site.blog}
        </a>
      </li>
      <li>
        <a
          href={getLocaleUrl(locale, '/about/')}
          class="hover-link--underline mobile-nav-link">
          {t.site.about}
        </a>
      </li>
    </ul>
  </nav>
</header>

<script>
  const mobileNav = document.querySelector('.mobile-nav');
  const mobileNavButton = document.querySelector('.button-mobile-nav');
  let mobileNavOpen = false;
  if (!mobileNav || !mobileNavButton) {
    throw new Error('Element not found!');
  }

  mobileNavButton.addEventListener('click', toggleNav);

  function toggleNav() {
    mobileNavOpen = !mobileNavOpen;
    mobileNav!.classList.toggle('open');
    mobileNavButton!.classList.toggle('is-active');
    mobileNavButton!.ariaExpanded = mobileNavOpen ? 'true' : 'false';
  }
</script>

<style>
  .main-header {
    position: sticky;
    top: 0;

    display: grid;
    grid-template-columns: subgrid;
    grid-column: span 2;
    align-items: center;

    padding-inline: 1rem;

    z-index: 2;

    background-color: var(--color-main-header);
    backdrop-filter: blur(2px);
  }

  .right {
    justify-content: space-between;
  }

  .main-nav {
    transform: translateX(-1rem);
  }

  .toggles {
    gap: 2rem;
  }

  .link {
    padding: 1rem;
    font-size: 1.2rem;
    letter-spacing: 3px;
    text-transform: uppercase;
  }

  .mobile-nav {
    position: fixed;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;

    font-family: serif;
    font-size: 2.5rem;
    font-weight: bold;
    text-align: center;

    background-color: var(--color-background);
    padding: 2rem 3rem;
    overflow: hidden;
    transform-origin: top;
    transition: all 0.2s ease-out;

    opacity: 0;
    pointer-events: none;
    visibility: hidden;

    .mobile-nav-list {
      padding-top: 4rem;
      display: flex;
      flex-direction: column;
      align-items: stretch;
      gap: 0.5rem;
      width: 100%;

      transform: translateX(-10%);
      opacity: 0;
      transition: all 0.2s;
    }
  }

  .mobile-nav-link {
    display: block;
  }

  @media (max-width: 72em) {
    .toggles {
      gap: 1.5rem;
    }
    .right {
      justify-content: flex-end;
    }
    .main-nav {
      display: none;
    }
    .mobile-nav.open {
      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
      transform: scaleY(1);

      opacity: 1;
      pointer-events: auto;
      visibility: visible;

      .mobile-nav-list {
        transform: translateX(0);
        opacity: 1;
        transition: all 0.2s 0.3s ease;
      }
    }
  }

  @media (max-width: 48em) {
    .main-header {
      padding-top: 1rem;
      padding-bottom: 1rem;
    }
  }
</style>
