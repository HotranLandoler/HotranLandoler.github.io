---
import { Icon } from 'astro-icon/components';
import BaseLayout from './BaseLayout.astro';
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type { ValueOf } from 'node_modules/astro/dist/type-utils';
import {
  getCurrentLocale,
  getCurrentTranslations,
  getLocaleUrl,
  type Translations,
} from '~/i18n';

export interface Props {
  gameKey: keyof Translations['games'];
  bannerSrc: ImageMetadata;
  gameLink: string;
  srcLink: string;
  pubDate: string;
  textColor: string;
  backgroundColor: string;
  foregroundColor: string;
  primaryColor: string;
  primaryDarkColor: string;
  onPrimaryColor: string;
  surfaceColor: string;
}

const {
  gameKey,
  bannerSrc,
  gameLink,
  srcLink,
  pubDate,
  textColor,
  backgroundColor,
  foregroundColor,
  primaryColor,
  primaryDarkColor,
  onPrimaryColor,
  surfaceColor,
} = Astro.props;

type Game = (typeof t.games)['cquHorror'];

const locale = getCurrentLocale(Astro.params);
const t = getCurrentTranslations(Astro.params);
const gameTranlations = t.games[gameKey] as Game;
---

<BaseLayout title={gameTranlations.title}>
  <main class="game">
    <div class="mb-m container">
      <Image class="banner" src={bannerSrc} alt="Game banner" />
      <article>
        <header class="flex-gap-s mb-m">
          <h1 class="title">{gameTranlations.title}</h1>
          <a
            class="link--primary text-icon-container button-play"
            target="_blank"
            href={gameLink}>
            {gameTranlations.action}
            <Icon name="mdi:arrow-right" />
          </a>
        </header>
        <slot />
        <div class="info">
          <slot name="info-main" />
          <aside class="info-side">
            <dl class="info-meta">
              <dt>{t.games.genre}</dt>
              <dd>{gameTranlations.genre}</dd>

              <dt>{t.games.platform}</dt>
              <dd class="platforms"><slot name="platforms" /></dd>

              <dt>{t.language}</dt>
              <dd><slot name="language" /></dd>

              <dt>{t.games.engine}</dt>
              <dd>Unity</dd>

              <dt>{t.games.pubDate}</dt>
              <dd><time>{pubDate}</time></dd>

              <dt>{t.games.sessionTime}</dt>
              <dd>{gameTranlations.session}</dd>

              <dt>{t.games.controls}</dt>
              <dd>{gameTranlations.controls}</dd>

              <dt>{t.games.src}</dt>
              <dd>
                <a class="base-link" target="_blank" href={srcLink}>
                  {t.games.repo}
                </a>
              </dd>

              <dt>{t.games.team}</dt>
              <dd>
                <slot name="team" />
              </dd>
            </dl>
            <div class="img-side-container">
              <slot name="side-img" />
            </div>
          </aside>
        </div>
      </article>
    </div>
    <div class="text-center">
      <a href={getLocaleUrl(locale, '/games/')} class="hover-link more-games">
        <span class="text-icon-container">
          <Icon name="mdi:arrow-left" />
          {t.games.moregames}
        </span>
      </a>
    </div>
  </main>
</BaseLayout>

<style
  lang="scss"
  define:vars={{
    textColor,
    foregroundColor,
    backgroundColor,
    primaryColor,
    primaryDarkColor,
    onPrimaryColor,
    surfaceColor,
  }}
>
  main {
    --color-primary-shadow: var(--primaryColor);

    padding-top: 8rem;
    padding-bottom: 8rem;

    color: var(--textColor);

    background-color: var(--backgroundColor);
  }
  article {
    padding: 2rem;
    padding-top: 0;
  }
  .game {
    :global(p) {
      margin-bottom: 1.5rem;

      line-height: 2;
    }

    --color-primary: var(--primaryColor);
    --color-primary-dark: var(--primaryColor);
  }

  .container {
    max-width: 48rem;
    padding: 0;

    background-color: var(--foregroundColor);
    border-radius: 0.5rem;
  }
  .banner {
    display: block;
    margin-bottom: 2rem;
    width: 100%;
    height: auto;

    background-color: var(--backgroundColor);
  }
  .title {
    font-size: 2rem;
  }
  .button-play {
    margin-left: auto;

    color: var(--onPrimaryColor);

    background-color: var(--primaryColor);
  }
  .info {
    display: grid;
    grid-template-columns: 1fr auto;
    gap: 2rem;
  }
  .info-side {
    display: grid;
    grid-template-rows: auto 1fr;
    gap: 1rem;
  }

  .info-meta {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: flex-start;
    padding: 1rem;

    background-color: var(--surfaceColor);
    border-radius: 0.5rem;

    :global([data-icon]) {
      font-size: 1.5rem;
    }
  }
  .info-meta dt,
  .info-meta dd {
    display: inline-block;
    padding: 0.5rem;
  }
  .info-meta dt {
    font-weight: bold;
    text-align: right;
  }

  .img-side-container {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .more-games {
    color: var(--textColor);

    border-color: var(--primaryColor);
  }
  :global(.side-img) {
    height: auto;
  }

  .platforms :global(span) {
    display: flex;
  }

  @media (max-width: 32em) {
    .info {
      display: flex;
      flex-direction: column;
    }
  }
</style>
